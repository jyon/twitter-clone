{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccout","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","console","log","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","update","toggleEditing","autoFocus","src","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","file","files","reader","FileReader","onloadend","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","tweetsArray","docs","map","marginTop","Profile","history","useHistory","getMyTweets","where","get","signOut","push","Navigation","display","justifyContent","to","marginRight","stype","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.422f0741.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCAixQJiETtQ7IbOtvJp4GWQaNzP3WDI0A\",\r\n    authDomain: \"twitter-clone-b.firebaseapp.com\",\r\n    projectId: \"twitter-clone-b\",\r\n    storageBucket: \"twitter-clone-b.appspot.com\",\r\n    messagingSenderId: \"832888607412\",\r\n    appId: \"1:832888607412:web:8a12c2d18dab12c7d33de1\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccout, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if (name === \"email\") {\r\n      setEmail(value)\r\n    } else if (name === \"password\") {\r\n      setPassword(value)\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccout) {\r\n        const data = await authService.createUserWithEmailAndPassword(email, password);\r\n        console.log(data);\r\n      } else {\r\n        const data = await authService.signInWithEmailAndPassword(email, password);\r\n        console.log(data);\r\n      }\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n    <form onSubmit={onSubmit} className=\"container\">\r\n      <input \r\n        name=\"email\"\r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        value={email}\r\n        onChange={onChange}\r\n        required \r\n        className=\"authInput\"\r\n      />\r\n      <input \r\n        name=\"password\"\r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        value={password}\r\n        onChange={onChange}\r\n        required \r\n        className=\"authInput\"\r\n      />\r\n      <input \r\n        type=\"submit\" \r\n        value={newAccout? \"Create Account\" : \"Log In\"} \r\n        className=\"authInput authSubmit\"\r\n      />\r\n      {error && <span className=\"authError\">{error}</span>}\r\n    </form>\r\n    <span onClick={toggleAccount} className=\"authSwitch\">\r\n      {newAccout? \"Sign In\" : \"Create Account\"}\r\n    </span>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: {name}\r\n    } = event;\r\n    let provider;\r\n    if (name===\"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div> \r\n  );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n  const onDeleteClick =  async () => {\r\n    const del = window.confirm(\"Are you sure delete this tweet?\");\r\n    if (del) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setNewTweet(value);\r\n  }\r\n\r\n  const toggleEditing = () => setEditing(prev => !prev);\r\n\r\n  return (\r\n    <div className=\"tweet\">\r\n      {editing ? (\r\n          <>\r\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n            <input \r\n              text=\"text\" \r\n              placeholder=\"Edit your tweet\" \r\n              value={newTweet} \r\n              onChange={onChange}\r\n              required \r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\"/>\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"tweet__actions\">\r\n            <span onClick={onDeleteClick}>\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </span>\r\n            <span onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faPencilAlt} />\r\n            </span>\r\n            </div>\r\n          )}\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;","import React from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ( { userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (tweet === \"\") return;\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl: attachmentUrl\r\n    };\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {target: {files}} = event;\r\n    const file = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (event) => {\r\n      const {\r\n        target : { result }\r\n      } = event;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"tweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot(snapshot => {\r\n        const tweetsArray = snapshot.docs.map((doc) => ({id: doc.id, ...doc.data()}));\r\n        setTweets(tweetsArray);\r\n      });\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30}}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet \r\n            key={tweet.id} \r\n            tweetObj={tweet} \r\n            isOwner={tweet.creatorId===userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ( { userObj }) => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyTweets = async () => {\r\n    const tweets = await dbService\r\n      .collection(\"tweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .get();\r\n    console.log(tweets.docs.map(doc => doc.data()));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyTweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; \r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faFileExcel, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => \r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n      <li>\r\n        <Link to=\"/\" style={{marginRight: 10}}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link \r\n          to=\"/profile\"\r\n          stype={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        > \r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10}}>\r\n            {userObj? `${userObj.displayName}'s Profile` : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n\r\n    </ul>\r\n  </nav>;\r\n\r\nexport default Navigation;","import { React, useState } from \"react\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj}) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj}/>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj}/>\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n          <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default AppRouter;","\nimport { React, useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      setIsLoggedIn(!!user);\n      setInit(true);\n      setUserObj(user);\n    });\n  }, []);\n  return (\n    <>\n      <AppRouter isLoggedIn={isLoggedIn} userObj={userObj}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fbase from 'fbase';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}